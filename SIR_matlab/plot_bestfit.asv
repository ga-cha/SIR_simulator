%
% plot_bestfit
%
% plots a line of best fit
%
%

function plot_bestfit(x, y, opt)
    arguments
        x
        y
        opt.color
        opt.polyval = 1;
    end

    assert (nargin < 2, "Usage: plot_best_fit(x, y, color=color, " + ...
        "p_degree=polynomial degree");


    % polyfit fits a degree 1 polynomial
    % polyval evaluates polynomial at specified points
    [p, ~, xfm] = polyfit(x, y, 1);
    y2 = polyval(p, x, [], xfm);
    plot(x, y2');
end
