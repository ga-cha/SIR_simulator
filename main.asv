% main.m
%
% Package based off https://github.com/yingqiuz/SIR_simulator
% Zheng, Ying-Qiu, et al. PLoS biol. 17.11 (2019): e3000495.
%
% Gabriella Chan 30/06/23
% gabriella.chan@monash.edu
% Monash University
%
% Simulates atrophy accrual due to the accumulation of misfolded
% protein aggregates, and correlates this with empirical data           


function [] = main(clear, opt)
    % clr: 
    % rsk: 
    % input clearance and risk lists as gene x region string arrays
    % gene tables are indexed as T(:, ["gene1", "gene2"])
    % accepts parcellations "DK", "S132", and "S332", for DK + aseg,
    % Schaefer 100 + Tian S2 and Schaefer 300 + Tian S2 respectively
    % dbg: switches output to console or file
    % vis: switches on visualisation options
    arguments
        clear {mustBeText}
        opt.risk {mustBeText}
        opt.out {mustBeText} = '../SIR_simulator_gene_corrs/results_3/gene_corrs.csv';
        opt.parc {mustBeText} = "S132" 
        opt.dbg {mustBeNumericOrLogical} = false;
        opt.vis {mustBeNumericOrLogical} = false;
    end

    % load workspace variables into parameter object 
    ws = 'data/workspace_' + opt.parc + '.mat';
    load(ws, 'gene_expr', 'ifod_len_35', ...
        'ifod_den_35', 'ROIsize', 'bgs', 'cobre', 'hcpep', 'stages');
    params = SIRparameters();
    params = set_atrophy(params, bgs, cobre, hcpep, stages);
    params = set_netw(params, ifod_len_35, ifod_den_35, ROIsize);
    params.vis = opt.vis;

    genes = SIRgenes(gene_expr, clear, opt);

    % run SIR simulation for each gene pair
    gene_corrs = SIRiterator(params, genes);

    if (opt.dbg)
        display(gene_corrs)
    else
        write_async(gene_corrs, opt.out)
    end
end

